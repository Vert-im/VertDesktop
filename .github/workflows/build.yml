name: C++ Build (Windows x64)

on:
  push: {}

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        config:
          - { name: "Windows MSVC", os: windows-latest, cc: "cl", cxx: "cl" }
    steps:
      - uses: actions/checkout@v3
  
      # Setup MSVC

      - uses: ilammy/msvc-dev-cmd@v1.4.1

      # Setup vcpkg

      - name: Setup anew (or from cache) vcpkg (and does not build any package)
        uses: lukka/run-vcpkg@v11
        with:
            vcpkgDirectory: '${{ github.workspace }}/vcpkg'
            runVcpkgInstall: true

      #- name: Install vcpkg
      #  run: |
      #    set PATH=%PATH%;C:\Users\runner\AppData\Local\Microsoft\WindowsApps\Microsoft.VisualStudio.2022Preview\VC\Auxiliary\Build\vcpkg
      #    vcpkg install --triplet x64-windows-static opengl glfw3 imgui[core,opengl3-binding,glfw-binding] spdlog nlohmann-json

      - name: Setup Ninja
        uses: ashutoshvarma/setup-ninja@master
        with:
          # ninja version to download. Default: 1.10.0
          version: 1.10.0

      # Configure environment for clang-cl 17 and Ninja
      #- name: Use Clang-CL 17
      #  uses: egor-tensin/setup-clang@v1
      #  with:
      #    version: latest
      #    platform: x64

      - name: Build with CMake
        uses: ashutoshvarma/action-cmake-build@master
        with:
          build-dir: ${{ runner.workspace }}/build
          cc: ${{ matrix.config.cc }}
          cxx: ${{ matrix.config.cxx }}
          configure-options: -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.mode }} -DCMAKE_TOOLCHAIN_FILE:STRING=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_ROOT:PATH=${{ github.workspace }}/vcpkg
          build-type: Release

      # Optional: Upload artifacts (built binaries)
      - uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.mode }}
          path: build/
