# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on Linux (X11)

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup Arch Linux environment
      # You may pin to the exact commit or the version.
      # uses: RangHo/setup-arch@4849cfe4dd8d4dea319e973d239768d36cc1af60
      uses: RangHo/setup-arch@v1.1.0
      with:
        version: latest
        mirror: https://geo.mirror.pkgbuild.com
        packages: "cmake clang xorg curl zip unzip ninja"

    - name: Enter Arch Environment
      run: |
        cat /etc/os-release
        shell: arch.sh {0}
      
    - name: Run Vcpkg
      uses: lukka/run-vcpkg@v7.6
      with:
        setupOnly: true
        vcpkgArguments: ''
        vcpkgDirectory: ${{ env.VCPKG_ROOT }}
        vcpkgGitCommitId: 326d8b43e365352ba3ccadf388d989082fe0f2a6

    - name: Install Dependencies using Vcpkg for X11
      run: ${{ env.VCPKG_ROOT }}/vcpkg install

    - name: Install Vcpkg integration
      run: ${{ env.VCPKG_ROOT }}/vcpkg integrate install

    - name: Configure CMake for X11
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DVCPKG_TARGET_TRIPLET:STRING=x64-linux -DCMAKE_TOOLCHAIN_FILE:PATH=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake -DVCPKG_ROOT=${{ env.VCPKG_ROOT }}

    - name: Build for X11
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Pack
      uses: actions/upload-artifact@v3
      with:
          name: Build Output
          path: ${{github.workspace}}/build/bin
